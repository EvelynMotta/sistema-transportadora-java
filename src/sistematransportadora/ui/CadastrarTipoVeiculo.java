/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package sistematransportadora.ui;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistematransportadora.modelo.VeiculoTipo;
import sistematransportadora.repositorio.VeiculoRepositorio;
import sistematransportadora.servico.VeiculoServico;

/**
 *
 * @author pedro
 */
public class CadastrarTipoVeiculo extends javax.swing.JInternalFrame {
    private final VeiculoRepositorio veiculoRepositorio;
    private final VeiculoServico veiculoServico;
    private DefaultTableModel dataModel;

    /**
     * Creates new form CadastrarTipoProduto
     */
    public CadastrarTipoVeiculo() {
        veiculoRepositorio = new VeiculoRepositorio();
        veiculoServico = new VeiculoServico();
        initComponents();
        carregarTabela();
    }

    public Image getIconImage() {
        Image img = new ImageIcon(getClass().getResource("/img/logo.png")).getImage();
        return img;
    }
    
    private void carregarTabela() {
        var tiposProdutos = veiculoRepositorio.buscarTipos();
        
        dataModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        dataModel.addColumn("Id");
        dataModel.addColumn("Nome do Tipo");
        dataModel.addColumn("Padrão");
        
        for (var tipo : tiposProdutos) {
            acrescentarNaTabela(tipo);
        }
        
        veiculoTabela.setModel(dataModel);
        
        // Ajuste de tamanho das colunas
        var colunaId = veiculoTabela.getColumn("Id");
        colunaId.setMaxWidth(50);
        colunaId.setMinWidth(40);
        
        var colunaPadrao = veiculoTabela.getColumn("Padrão");
        colunaPadrao.setMaxWidth(70);
        colunaPadrao.setMinWidth(55);
    }
    
    private void acrescentarNaTabela(VeiculoTipo tipoProduto) {
        dataModel.addRow(new Object[] {
            tipoProduto.id(),
            tipoProduto.nome(),
            tipoProduto.isPadrao()
                ? "Sim"
                : "Não"
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cadastroDialogo = new javax.swing.JDialog();
        btnCadastrarDialogo = new javax.swing.JButton();
        txtTipoNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        veiculoTabela = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();

        cadastroDialogo.setTitle("Cadastro");
        cadastroDialogo.setIconImage(getIconImage());
        cadastroDialogo.setMinimumSize(new java.awt.Dimension(195, 165));
        cadastroDialogo.setModal(true);
        cadastroDialogo.setSize(new java.awt.Dimension(195, 165));

        btnCadastrarDialogo.setText("Cadastrar");
        btnCadastrarDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarDialogoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome do tipo de veículo");

        javax.swing.GroupLayout cadastroDialogoLayout = new javax.swing.GroupLayout(cadastroDialogo.getContentPane());
        cadastroDialogo.getContentPane().setLayout(cadastroDialogoLayout);
        cadastroDialogoLayout.setHorizontalGroup(
            cadastroDialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroDialogoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(cadastroDialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTipoNome)
                    .addComponent(btnCadastrarDialogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        cadastroDialogoLayout.setVerticalGroup(
            cadastroDialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastroDialogoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTipoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCadastrarDialogo)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("Nome do tipo de veículo");

        setTitle("Cadastrar Tipo de Veículo");

        veiculoTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Nome do Tipo", "Padrão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        veiculoTabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(veiculoTabela);

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarDialogoActionPerformed
        try {
            var nomeTipo = txtTipoNome.getText().trim();
            var idTipo = veiculoServico.buscarIdValidaParaTipo();

            VeiculoTipo tipo = new VeiculoTipo(idTipo, nomeTipo, false);
            veiculoServico.cadastrarTipo(tipo);
            acrescentarNaTabela(tipo);
            
            txtTipoNome.setText("");
            cadastroDialogo.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                null, e.getMessage(),
                "Erro!", JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_btnCadastrarDialogoActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        try {
            var index = veiculoTabela.getSelectedRow();
            if (index == -1) {
                throw new Exception("Nenhum tipo de veículo foi selecionado!");
            }
            
            // Só exibe a mensagem de confirmação caso o tipo não seja padrão,
            // ou seja, caso o tipo seja realmente apagável.
            if (dataModel.getValueAt(index, 2) == "Não") {
                var respostaDialog = JOptionPane.showConfirmDialog(
                    null, 
                    """
                    Ao apagar o tipo de veículo, você também apagará todos os veículos
                    relacionados. Você deseja continuar?
                    """,
                    "Atenção!",
                    JOptionPane.YES_NO_OPTION
                );
                if (respostaDialog != JOptionPane.YES_OPTION)
                    return;
            }
            
            var idTipo = (int) dataModel.getValueAt(index, 0);
            veiculoServico.apagarTipoPorId(idTipo);
            dataModel.removeRow(index);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                null, e.getMessage(),
                "Erro!", JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        cadastroDialogo.setModal(true);
        cadastroDialogo.setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCadastrarDialogo;
    private javax.swing.JDialog cadastroDialogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtTipoNome;
    private javax.swing.JTable veiculoTabela;
    // End of variables declaration//GEN-END:variables
}
